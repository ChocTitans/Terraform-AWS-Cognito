name: Deploy prometheus
on:
    workflow_call:
      secrets:
        aws-access-key-id:
           required: true
        aws-secret-access-key:
           required: true
      inputs: 
        aws-region:
           type: string
           required: true
jobs:
      Deploy_prometheus:
        name: Deploy prometheus
        runs-on: ubuntu-latest

        steps:

          - name: Checkout repository
            uses: actions/checkout@v2

          - name: Set up aws credentials
            uses: aws-actions/configure-aws-credentials@v3
            with:
              aws-access-key-id: ${{ secrets.aws-access-key-id }}
              aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
              aws-region: ${{ inputs.aws-region }}

          - name: install eksctl
            run: |
                 chmod +x eksctl/install.sh
                 eksctl/install.sh

          - name: Update kubeconfig
            run: |
                 aws eks update-kubeconfig --name ${{ vars.CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}

          - name: Install Helm through a sh script
            run: |
                 curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
                 chmod 700 get_helm.sh
                 ./get_helm.sh

          - name: Create prometheus namespace
            run: |
                  kubectl create namespace prometheus  || true

          - name: Deploy prometheus
            run: |
                  helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
                  helm upgrade -i prometheus prometheus-community/prometheus \
                  --namespace prometheus \
                  --set alertmanager.persistentVolume.storageClass="gp2",server.persistentVolume.storageClass="gp2" || true

          - name: Create IAM OIDC Provider
            run: |
                  oidc_id=$(aws eks describe-cluster --name ${{ vars.AWS_CLUSTER_NAME }} --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
                  aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4 
                  eksctl utils associate-iam-oidc-provider --region ${{ vars.AWS_REGION }} --cluster ${{ vars.CLUSTER_NAME }} --approve

          - name: Add IAM Role using eksctl
            run: |
                 eksctl create iamserviceaccount \
                 --region ${{ vars.AWS_REGION }} \
                 --cluster ${{ vars.CLUSTER_NAME }} \
                 --name ebs-csi-controller-sa \
                 --namespace kube-system \
                 --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
                 --approve \
                 --role-only \
                 --role-name AmazonEKS_EBS_CSI_DriverRole || true

          - name: Add EBS CSI to eks
            run: |
                 eksctl create addon --name aws-ebs-csi-driver --cluster ${{ vars.CLUSTER_NAME }}
                 --region ${{ vars.AWS_REGION }} --service-account-role-arn
                 arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/AmazonEKS_EBS_CSI_DriverRole --force

